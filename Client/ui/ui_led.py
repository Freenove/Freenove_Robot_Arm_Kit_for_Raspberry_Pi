# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_led.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Led(object):
    def setupUi(self, Led):
        Led.setObjectName("Led")
        Led.setEnabled(True)
        Led.resize(408, 275)
        font = QtGui.QFont()
        font.setFamily("3ds")
        Led.setFont(font)
        Led.setStyleSheet("QWidget{\n"
"background:#484848;\n"
"}\n"
"QAbstractButton{\n"
"border-style:0px;\n"
"border-radius:0px;\n"
"color:#DCDCDC;\n"
"background:qlineargradient(spread:pad,x1:0,y1:0,x2:0,y2:1,stop:0 #858585,stop:1 #383838);\n"
"}\n"
"QAbstractButton:hover{\n"
"color:#000000;\n"
"background-color:#008aff;\n"
"}\n"
"QAbstractButton:pressed{\n"
"color:#DCDCDC;\n"
"border-style:solid;\n"
"border-width:0px 0px 0px 4px;\n"
"border-color:#008aff;\n"
"background-color:#444444;\n"
"}\n"
"QLabel{\n"
"color:#DCDCDC;\n"
"}\n"
"QLabel:focus{\n"
"border:1px solid #00BB9E;\n"
"}\n"
"QLineEdit{\n"
"border:1px solid #242424;\n"
"border-radius:3px;\n"
"background:none;\n"
"selection-background-color:#484848;\n"
"selection-color:#DCDCDC;\n"
"}\n"
"QLineEdit:focus,QLineEdit:hover{\n"
"border:1px solid #242424;\n"
"}\n"
"QLineEdit{\n"
"border:1px solid #242424;\n"
"border-radius:3px;\n"
"background:none;\n"
"selection-background-color:#484848;\n"
"selection-color:#DCDCDC;\n"
"}\n"
"QLineEdit:focus,QLineEdit:hover{\n"
"border:1px solid #242424;\n"
"}\n"
"QLineEdit{\n"
"lineedit-password-character:9679;\n"
"}\n"
"QSlider::sub-page:horizontal{\n"
"height:8px;\n"
"border-radius:3px;\n"
"background:#008aff;\n"
"}\n"
"QGroupBox::title {\n"
"pading:2px;\n"
"color:white;\n"
"subcontrol-position: top center;\n"
"border-top:0px ;} ")
        self.widget_Led_Color_Disk = QtWidgets.QWidget(Led)
        self.widget_Led_Color_Disk.setGeometry(QtCore.QRect(110, 30, 201, 241))
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.widget_Led_Color_Disk.setFont(font)
        self.widget_Led_Color_Disk.setFocusPolicy(QtCore.Qt.NoFocus)
        self.widget_Led_Color_Disk.setObjectName("widget_Led_Color_Disk")
        self.label_Led_Brightness = QtWidgets.QLabel(Led)
        self.label_Led_Brightness.setGeometry(QtCore.QRect(330, 240, 70, 25))
        font = QtGui.QFont()
        font.setFamily("3ds")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_Led_Brightness.setFont(font)
        self.label_Led_Brightness.setStyleSheet("")
        self.label_Led_Brightness.setFrameShape(QtWidgets.QFrame.Box)
        self.label_Led_Brightness.setAlignment(QtCore.Qt.AlignCenter)
        self.label_Led_Brightness.setObjectName("label_Led_Brightness")
        self.verticalSlider_Led_Brightness = QtWidgets.QSlider(Led)
        self.verticalSlider_Led_Brightness.setGeometry(QtCore.QRect(355, 50, 22, 181))
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.verticalSlider_Led_Brightness.setFont(font)
        self.verticalSlider_Led_Brightness.setMaximum(255)
        self.verticalSlider_Led_Brightness.setProperty("value", 50)
        self.verticalSlider_Led_Brightness.setOrientation(QtCore.Qt.Vertical)
        self.verticalSlider_Led_Brightness.setObjectName("verticalSlider_Led_Brightness")
        self.lineEdit_Led_Brightness = QtWidgets.QLineEdit(Led)
        self.lineEdit_Led_Brightness.setGeometry(QtCore.QRect(345, 10, 41, 31))
        font = QtGui.QFont()
        font.setFamily("3ds")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.lineEdit_Led_Brightness.setFont(font)
        self.lineEdit_Led_Brightness.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_Led_Brightness.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_Led_Brightness.setObjectName("lineEdit_Led_Brightness")
        self.splitter = QtWidgets.QSplitter(Led)
        self.splitter.setGeometry(QtCore.QRect(10, 50, 81, 221))
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.radioButton_Led_Mode_Off = QtWidgets.QRadioButton(self.splitter)
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.radioButton_Led_Mode_Off.setFont(font)
        self.radioButton_Led_Mode_Off.setCheckable(True)
        self.radioButton_Led_Mode_Off.setChecked(True)
        self.radioButton_Led_Mode_Off.setObjectName("radioButton_Led_Mode_Off")
        self.radioButton_Led_Mode_RGB = QtWidgets.QRadioButton(self.splitter)
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.radioButton_Led_Mode_RGB.setFont(font)
        self.radioButton_Led_Mode_RGB.setCheckable(True)
        self.radioButton_Led_Mode_RGB.setChecked(False)
        self.radioButton_Led_Mode_RGB.setObjectName("radioButton_Led_Mode_RGB")
        self.radioButton_Led_Mode_Following = QtWidgets.QRadioButton(self.splitter)
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.radioButton_Led_Mode_Following.setFont(font)
        self.radioButton_Led_Mode_Following.setCheckable(True)
        self.radioButton_Led_Mode_Following.setChecked(False)
        self.radioButton_Led_Mode_Following.setObjectName("radioButton_Led_Mode_Following")
        self.radioButton_Led_Mode_Blink = QtWidgets.QRadioButton(self.splitter)
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.radioButton_Led_Mode_Blink.setFont(font)
        self.radioButton_Led_Mode_Blink.setCheckable(True)
        self.radioButton_Led_Mode_Blink.setChecked(False)
        self.radioButton_Led_Mode_Blink.setObjectName("radioButton_Led_Mode_Blink")
        self.radioButton_Led_Mode_Breathing = QtWidgets.QRadioButton(self.splitter)
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.radioButton_Led_Mode_Breathing.setFont(font)
        self.radioButton_Led_Mode_Breathing.setCheckable(True)
        self.radioButton_Led_Mode_Breathing.setChecked(False)
        self.radioButton_Led_Mode_Breathing.setObjectName("radioButton_Led_Mode_Breathing")
        self.radioButton_Led_Mode_Rainbow = QtWidgets.QRadioButton(self.splitter)
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.radioButton_Led_Mode_Rainbow.setFont(font)
        self.radioButton_Led_Mode_Rainbow.setCheckable(True)
        self.radioButton_Led_Mode_Rainbow.setChecked(False)
        self.radioButton_Led_Mode_Rainbow.setObjectName("radioButton_Led_Mode_Rainbow")
        self.radioButton_Led_Mode_Gradient = QtWidgets.QRadioButton(self.splitter)
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.radioButton_Led_Mode_Gradient.setFont(font)
        self.radioButton_Led_Mode_Gradient.setCheckable(True)
        self.radioButton_Led_Mode_Gradient.setChecked(False)
        self.radioButton_Led_Mode_Gradient.setObjectName("radioButton_Led_Mode_Gradient")
        self.splitter_2 = QtWidgets.QSplitter(Led)
        self.splitter_2.setGeometry(QtCore.QRect(11, 10, 311, 21))
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.splitter_2.setFont(font)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.label_Led_Color_Disk = QtWidgets.QLabel(self.splitter_2)
        font = QtGui.QFont()
        font.setFamily("3ds")
        self.label_Led_Color_Disk.setFont(font)
        self.label_Led_Color_Disk.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_Led_Color_Disk.setText("")
        self.label_Led_Color_Disk.setObjectName("label_Led_Color_Disk")
        self.lineEdit_Led_Color_R = QtWidgets.QLineEdit(self.splitter_2)
        self.lineEdit_Led_Color_R.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("3ds")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.lineEdit_Led_Color_R.setFont(font)
        self.lineEdit_Led_Color_R.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_Led_Color_R.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_Led_Color_R.setObjectName("lineEdit_Led_Color_R")
        self.lineEdit_Led_Color_G = QtWidgets.QLineEdit(self.splitter_2)
        self.lineEdit_Led_Color_G.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("3ds")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.lineEdit_Led_Color_G.setFont(font)
        self.lineEdit_Led_Color_G.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_Led_Color_G.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_Led_Color_G.setObjectName("lineEdit_Led_Color_G")
        self.lineEdit_Led_Color_B = QtWidgets.QLineEdit(self.splitter_2)
        self.lineEdit_Led_Color_B.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("3ds")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.lineEdit_Led_Color_B.setFont(font)
        self.lineEdit_Led_Color_B.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_Led_Color_B.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_Led_Color_B.setObjectName("lineEdit_Led_Color_B")

        self.retranslateUi(Led)
        QtCore.QMetaObject.connectSlotsByName(Led)

    def retranslateUi(self, Led):
        _translate = QtCore.QCoreApplication.translate
        Led.setWindowTitle(_translate("Led", "Led"))
        self.label_Led_Brightness.setText(_translate("Led", "Brightness"))
        self.lineEdit_Led_Brightness.setText(_translate("Led", "50"))
        self.radioButton_Led_Mode_Off.setText(_translate("Led", "OFF"))
        self.radioButton_Led_Mode_RGB.setText(_translate("Led", "RGB"))
        self.radioButton_Led_Mode_Following.setText(_translate("Led", "Following"))
        self.radioButton_Led_Mode_Blink.setText(_translate("Led", "Blink"))
        self.radioButton_Led_Mode_Breathing.setText(_translate("Led", "Breathing"))
        self.radioButton_Led_Mode_Rainbow.setText(_translate("Led", "Rainbow"))
        self.radioButton_Led_Mode_Gradient.setText(_translate("Led", "Gradient"))
        self.lineEdit_Led_Color_R.setText(_translate("Led", "255"))
        self.lineEdit_Led_Color_G.setText(_translate("Led", "255"))
        self.lineEdit_Led_Color_B.setText(_translate("Led", "0"))
